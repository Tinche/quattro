[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "quattro"
authors = [{name = "Tin Tvrtkovic", email = "tinchester@gmail.com"}]
classifiers = ["License :: OSI Approved :: Apache Software License"]
dynamic = ["description", "version"]
requires-python = ">=3.9"
dependencies = [
    "attrs",
    "exceptiongroup; python_version < '3.11'",
]
readme = "README.md"

[tool.pdm.dev-dependencies]
test = [
    "pytest-asyncio>=0.20.3",
    "coverage",
]
lint = [
    "black",
    "mypy>=0.991",
    "ruff>=0.0.272",
]

[tool.mypy]
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "asyncio.taskgroups"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "exceptiongroup"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.coverage.run]
parallel = true
source_pkgs = ["quattro"]

[tool.ruff]
src = ["src", "tests"]
select = [
    "E",   # pycodestyle
    "W",   # pycodestyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "YTT", # flake8-2020
    "S",   # flake8-bandit
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "T10", # flake8-debugger
    "ISC", # flake8-implicit-str-concat
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "DTZ", # flake8-datetimez
    "PGH", # pygrep-hooks
    "PLC", # Pylint
    "PIE", # flake8-pie
    "RUF", # ruff
    "I",   # isort
]
ignore = [
    "S101",   # assert
    "S301",   # pickle in tests
    "PGH003", # leave my type: ignores alone
]

[tool.coverage.report]
exclude_also = [
    "@overload",
]

[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" }
