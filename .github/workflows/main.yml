---
name: CI

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

permissions: {}

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "py3.9"]

    steps:
      - uses: "actions/checkout@v4"
        with:
          persist-credentials: false

      - uses: hynek/setup-cached-uv@v2

      - uses: extractions/setup-just@v2

      - name: "Run Tox"
        env:
          V: ${{ matrix.python-version }}
        run: |
          export TOX_PYTHON=py$(echo $V | tr -d .)
          uvx --with tox-uv tox -e $TOX_PYTHON

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          path: .coverage.*
          if-no-files-found: ignore
          include-hidden-files: true

  coverage:
    name: "Combine & check coverage."
    needs: "tests"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v4"
        with:
          persist-credentials: false

      - uses: hynek/setup-cached-uv@v2

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: "Combine coverage"
        run: |
          uv tool install coverage[toml]
          coverage combine
          coverage html --skip-covered --skip-empty
          coverage json

          # Report and write to summary.
          coverage report | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY

          export TOTAL=$(uvx python@3.13 -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
          echo "total=$TOTAL" >> $GITHUB_ENV

          # Report again and fail if under the threshold.
          coverage report --fail-under=100

      - name: "Upload HTML report if check failed."
        uses: "actions/upload-artifact@v4"
        with:
          name: "html-report"
          path: "htmlcov"
        if: ${{ failure() }}

      - name: "Make badge"
        if: github.ref == 'refs/heads/main'
        uses: "schneegans/dynamic-badges-action@v1.4.0"
        with:
          # GIST_TOKEN is a GitHub personal access token with scope "gist".
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: 87277dd3077fb1eefebc5d4f71b4c4b7
          filename: covbadge.json
          label: Coverage
          message: ${{ env.total }}%
          minColorRange: 50
          maxColorRange: 90
          valColorRange: ${{ env.total }}

  package:
      name: "Build & verify package"
      runs-on: "ubuntu-latest"

      steps:
        - uses: "actions/checkout@v4"
          with:
            persist-credentials: false

        - uses: hynek/setup-cached-uv@v2

        - name: "Build package"
          run: "uv run --with build -m build"

        - name: "List result"
          run: "ls -l dist"

        - name: "Check wheel contents"
          run: "uvx check-wheel-contents dist/*.whl"

        - name: "Check long_description"
          run: "uvx twine check dist/*"
